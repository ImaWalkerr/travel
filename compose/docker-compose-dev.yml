version: 3.8
services:
  travel_ui:
    build:
      context: ../travel_ui
      dockerfile: docker/development/Dockerfile
    container_name: travel-ui
    command: npm run start
    ports:
      - '3000:3000'
    networks:
      - travel-api-net
    tty: true
    stdin_open: true
    volumes:
      - ../travel_ui:/home/nodeuser/app
    depends_on:
      - travel_backend

  travel_backend:
    build:
      context: ../travel_backend
      dockerfile: docker/development/Dockerfile
    container_name: travel_backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    env_file:
      - ../travel_backend/env/development/.env
    volumes:
      - ../travel_backend:/home/django/app
    networks:
      - travel-api-net
      - travel-db-net
    depends_on:
      - database

  database:
    image: postgres:14-alpine
    container_name: travel-postgres
    env_file:
      - ../travel_backend/env/development/.db.env
    ports:
      - '5433:5432'
    networks:
      - travel-db-net
    volumes:
      - travel-data-storage:/var/lib/postgresql/data

networks:
  travel-api-net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
  travel-db-net:
    driver: bridge

volumes:
  travel-data-storage:
